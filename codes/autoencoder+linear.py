# -*- coding: utf-8 -*-
"""DL_5.4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KyxlO0HCuleULL3a1tViOQh20lPZMWbm
"""


import matplotlib.pyplot as plt
from keras.datasets import mnist
from keras.models import Sequential
from keras.layers import Dense
from keras.layers import Conv2D, MaxPooling2D
import keras
import numpy as np
(trainX, trainy), (testX, testy) = mnist.load_data()
nsamples, nx, ny = trainX.shape
d2_trainX = trainX.reshape((nsamples,nx*ny))
d2_trainX=d2_trainX/255.0
model1 = Sequential()
model1.add(Dense(784,activation='linear',input_dim=784))
model1.add(Dense(512,activation='linear'))
model1.add(Dense(256,activation='linear'))
model1.add(Dense(128,activation='linear'))
model1.add(Dense(64,activation='linear'))
model1.add(Dense(2,activation='linear',name="code_layer"))
model1.add(Dense(64,activation='linear'))
model1.add(Dense(128,activation='linear'))
model1.add(Dense(256,activation='linear'))
model1.add(Dense(512,activation='linear'))
model1.add(Dense(784,activation='linear'))
model1.compile(loss=keras.losses.mean_squared_error,metrics = ['accuracy'])
model1.fit(d2_trainX,d2_trainX,epochs=50,verbose=1)

feature_extractor = keras.Model(
    inputs=model1.inputs,
    outputs=model1.get_layer(name="code_layer").output,
)




x_hat_train1 = model1.predict(d2_trainX)

from sklearn.metrics import mean_squared_error
error2=np.sqrt(mean_squared_error(d2_trainX, x_hat_train1))
print(error2)
nsamples, nx, ny = testX.shape
d2_testX=testX.reshape((nsamples,nx*ny))
d2_testX=d2_testX/255.0
x_hat_test2=model1.predict(d2_testX)
error3=np.sqrt(mean_squared_error(d2_testX, x_hat_test2))
print(error3)

features = feature_extractor(d2_trainX)
plt.figure(figsize=(10,10)) 
plt.scatter(features[:,0], features[:, 1], s = 100,marker='*' ,c = 'red')
plt.title('2d data of MNIST')
plt.xlabel('x')
plt.ylabel('y')
plt.legend()
plt.show()
